name: helm-upgrade
run-name: ${{ github.actor }} - ${{ github.ref_name }}

on:
  workflow_call:
    inputs:
      environment:
        required: true
        description: 'Environment to deploy to'
        type: string
      version:
        required: true
        type: string
      OsType:
        required: true
        type: string
      PythonVersion:
        required: true
        type: string
      helm-values-path:
        type: string
        default: './todoapp/values.yaml'
      helm-release-name:
        default: todoapp
        type: string
jobs:
  deploy-helm:
    name: ${{ inputs.environment }}
    runs-on: ${{ inputs.OsType }}
    environment: ${{ inputs.environment }}

    steps:
    - name: Install wget (Windows only)
      if: ${{ inputs.OsType == 'windows-latest' }}
      shell: pwsh
      run: |
        $wgetUrl = "https://eternallybored.org/misc/wget/1.21.4/64/wget.exe"
        $wgetPath = "C:\Windows\System32\wget.exe"
        # Download wget
        Invoke-WebRequest -Uri $wgetUrl -OutFile $wgetPath
        # Update PATH environment variable
        [System.Environment]::SetEnvironmentVariable('PATH', $env:PATH + ';C:\Windows\System32', [System.EnvironmentVariableTarget]::Machine)
        # Confirm wget installation
        & $wgetPath --version

    - name: Validate wget (Windows only)
      if: ${{ inputs.OsType == 'windows-latest' }}
      shell: pwsh
      run: |
        # Refresh the PATH environment variable
        [System.Environment]::SetEnvironmentVariable('PATH', $env:PATH + ';C:\Windows\System32', [System.EnvironmentVariableTarget]::Process)
        # Check wget version
        wget -V

    - uses: actions/download-artifact@v4
      with:
        name: helm-package
        path: .

    - uses: actions/download-artifact@v4
      with:
        name: helm-artifacts-[OS.${{ inputs.OsType }}]-[python-v.${{ inputs.PythonVersion }}]
        path: .

    - uses: actions/download-artifact@v4
      with:
        name: kind-cluster-[OS.${{ inputs.OsType }}]-[python-v.${{ inputs.PythonVersion }}]
        path: .

    - name: Set Up Helm
      uses: azure/setup-helm@v4.2.0

    - name: Set up Kubectl
      uses: azure/setup-kubectl@v4

    - name: Create k8s Kind Cluster
      uses: helm/kind-action@v1
      with:
        config: ./cluster.yml
        version: v0.23.0
        verbosity: 3

    - name: Dry Run Helm
      run: |
        helm install --dry-run ${{ inputs.helm-release-name }} ./todoapp-*.tgz  \
        -f ${{ inputs.helm-values-path }} \
        --set mysql.secrets.MYSQL_ROOT_PASSWORD="${{ secrets.MYSQL_ROOT_PASSWORD }}" \
        --set mysql.secrets.MYSQL_USER="${{ secrets.MYSQL_USER }}" \
        --set mysql.secrets.MYSQL_PASSWORD="${{ secrets.MYSQL_PASSWORD }}" \
        --set todoapp.secrets.SECRET_KEY="${{ secrets.APP_SECRET_KEY }}" \
        --set todoapp.secrets.DB_NAME="${{ secrets.APP_DB_NAME }}" \
        --set todoapp.secrets.DB_USER="${{ secrets.MYSQL_USER }}" \
        --set todoapp.secrets.DB_PASSWORD="${{ secrets.MYSQL_PASSWORD }}" \
        --set todoapp.secrets.DB_HOST="${{ secrets.APP_DB_HOST }}" \
        --set todoapp.image.tag="${{ github.sha }}" \
        --set todoapp.image.repository=${{ secrets.DOCKERHUB_USERNAME }}/todoapp

    - name: Deploy helm to Development
      run: |
        helm upgrade --install --wait --timeout 180s --debug ${{ inputs.helm-release-name }} ./todoapp-*.tgz \
        -f ${{ inputs.helm-values-path }} \
        --set mysql.secrets.MYSQL_ROOT_PASSWORD="${{ secrets.MYSQL_ROOT_PASSWORD }}" \
        --set mysql.secrets.MYSQL_USER="${{ secrets.MYSQL_USER }}" \
        --set mysql.secrets.MYSQL_PASSWORD="${{ secrets.MYSQL_PASSWORD }}" \
        --set todoapp.secrets.SECRET_KEY="${{ secrets.APP_SECRET_KEY }}" \
        --set todoapp.secrets.DB_NAME="${{ secrets.APP_DB_NAME }}" \
        --set todoapp.secrets.DB_USER="${{ secrets.MYSQL_USER }}" \
        --set todoapp.secrets.DB_PASSWORD="${{ secrets.MYSQL_PASSWORD }}" \
        --set todoapp.secrets.DB_HOST="${{ secrets.APP_DB_HOST }}" \
        --set todoapp.image.tag="${{ github.sha }}" \
        --set todoapp.image.repository=${{ secrets.DOCKERHUB_USERNAME }}/todoapp
